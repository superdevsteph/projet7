server.port 9001

spring.application.name=microserviceBdd

# Spring security
spring.security.user.name=utilisateur
spring.security.user.password=mdp

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/bibliotheque
spring.datasource.userName= postgres
spring.datasource.password= password

# for avoid :org.postgresql.jdbc.PgConnection.createClob() is not yet implemented error
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

#For avoid error : No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor
#spring.jackson.serialization.fail-on-empty-beans=false

#For log on console
spring.jpa.show-sql=true

# logging level
#logging.level.org.springframework=ERROR
#logging.level.com.eLibrary=DEBUG
#spring.jpa.properties.hibernate.generate_statistics=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# output to a file
#logging.file=logsMicroservice.log

# temp folder example
#logging.file=${java.io.tmpdir}/app.log

#logging.pattern.file=%d %p %c{1.} [%t] %m%n

